{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isFileList = isFileList;\nexports[\"default\"] = void 0;\n\nvar _validators = _interopRequireDefault(require(\"./validators\"));\n\nvar _helpers = require(\"./helpers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar ACCEPT_SEP_REG = ',';\nvar file = (0, _helpers.memoize)(function () {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      message = _ref.message,\n      msg = _ref.msg,\n      accept = _ref.accept,\n      minSize = _ref.minSize,\n      maxSize = _ref.maxSize,\n      minFiles = _ref.minFiles,\n      maxFiles = _ref.maxFiles,\n      ifCond = _ref[\"if\"],\n      unless = _ref.unless,\n      allowBlank = _ref.allowBlank;\n\n  msg = msg || message;\n  minFiles = (0, _helpers.selectNum)(minFiles);\n  maxFiles = (0, _helpers.selectNum)(maxFiles);\n\n  if (maxFiles < 0) {\n    maxFiles = null;\n  }\n\n  if (minFiles === null) {\n    minFiles = 1;\n  }\n\n  if (typeof accept === 'string' && accept.trim()) {\n    accept = accept.trim().toLowerCase().split(ACCEPT_SEP_REG).map(function (type) {\n      type = type.trim();\n      return type.charAt(0) === '.' || type.indexOf('*') < 0 ? type : (0, _helpers.stringToReg)(type);\n    });\n  } else {\n    accept = null;\n  }\n\n  var min = minSize != null ? sizeToInt(minSize) : null;\n  var max = maxSize != null ? sizeToInt(maxSize) : null;\n  return (0, _helpers.prepare)(ifCond, unless, false, function (value) {\n    var isAFileList = isFileList(value); // special blank check\n\n    if ((allowBlank != null ? allowBlank : _validators[\"default\"].defaultOptions.allowBlank) && (typeof value === 'string' ? value.trim() === '' : isAFileList && value.length === 0)) {\n      return;\n    }\n\n    if (!isAFileList) {\n      return _validators[\"default\"].formatMessage((0, _helpers.prepareMsg)(msg, 'file'));\n    }\n\n    if (isNaN(value.length)) {\n      value = [value];\n    }\n\n    if (value.length < minFiles) {\n      return _validators[\"default\"].formatMessage((0, _helpers.prepareMsg)(msg, 'fileTooFew', 'tooFew', 'minFiles', {\n        count: minFiles\n      }));\n    }\n\n    if (maxFiles !== null && value.length > maxFiles) {\n      return _validators[\"default\"].formatMessage((0, _helpers.prepareMsg)(msg, 'fileTooMany', 'tooMany', 'maxFiles', {\n        count: maxFiles\n      }));\n    }\n\n    var acceptError = [];\n    var tooSmallError = [];\n    var tooBigError = [];\n\n    var _loop = function _loop(i, len, _val, _ftype, _fext) {\n      _val = value[i];\n\n      if (accept) {\n        _ftype = _val.type ||\n        /* istanbul ignore next */\n        '';\n        _fext = fileExt(_val.name ||\n        /* istanbul ignore next */\n        '');\n\n        if (!accept.some(function (type) {\n          val = _val;\n          ftype = _ftype;\n          fext = _fext;\n          return typeof type === 'string' ? type === (type.charAt(0) === '.' ? _fext : _ftype) : type.test(_ftype);\n        })) {\n          acceptError.push(_val);\n        }\n      }\n\n      if (min != null && _val.size < min) {\n        tooSmallError.push(_val);\n      }\n\n      if (max != null && _val.size > max) {\n        tooBigError.push(_val);\n      }\n\n      val = _val;\n      ftype = _ftype;\n      fext = _fext;\n    };\n\n    for (var i = 0, len = value.length, val, ftype, fext; i < len; ++i) {\n      _loop(i, len, val, ftype, fext);\n    }\n\n    if (acceptError.length) {\n      return _validators[\"default\"].formatMessage((0, _helpers.prepareMsg)(msg, 'fileAccept', 'accept', {\n        files: acceptError,\n        count: acceptError.length\n      }));\n    }\n\n    if (tooSmallError.length) {\n      var pair = parse(minSize);\n      return _validators[\"default\"].formatMessage((0, _helpers.prepareMsg)(msg, 'fileTooSmall', 'tooSmall', 'minSize', {\n        files: tooSmallError,\n        count: tooSmallError.length,\n        size: _validators[\"default\"].formatSize(pair[1], pair[2] || 'B')\n      }));\n    }\n\n    if (tooBigError.length) {\n      var _pair = parse(maxSize);\n\n      return _validators[\"default\"].formatMessage((0, _helpers.prepareMsg)(msg, 'fileTooBig', 'tooBig', 'maxSize', {\n        files: tooBigError,\n        count: tooBigError.length,\n        size: _validators[\"default\"].formatSize(_pair[1], _pair[2] || 'B')\n      }));\n    }\n  });\n});\nvar _default = file;\nexports[\"default\"] = _default;\n\nfunction isFileList(value) {\n  if (typeof FileList !== 'undefined' && value instanceof FileList || typeof File !== 'undefined' && (value instanceof File || value[0] instanceof File)) {\n    return true;\n  }\n\n  var str = _helpers.TO_STRING.call(value);\n\n  return str === '[object FileList]' || str === '[object File]' || _helpers.TO_STRING.call(value[0]) === '[object File]';\n} // private\n// eslint-disable-next-line no-useless-escape\n\n\nvar SIZE_REG = /^([\\d\\.]+)\\s*([KMGTPE]?B)?$/;\nvar SIZE_UNITS = {\n  B: 1,\n  KB: 1024,\n  MB: 1048576,\n  GB: 1073741824,\n  TB: 1099511627776,\n  PB: 1125899906842624,\n  EB: 1152921504606847000\n};\n\nfunction parse(size) {\n  return SIZE_REG.exec(('' + size).trim());\n}\n\nfunction sizeToInt(size) {\n  var pair = parse(size);\n  if (pair) return pair[1] * (SIZE_UNITS[pair[2]] || 1);\n  /* istanbul ignore else */\n\n  if (typeof console !== 'undefined') {\n    console.error(\"file validator: size \\\"\".concat(size, \"\\\" unknown\"));\n  }\n\n  return null;\n}\n\nfunction fileExt(filename) {\n  return filename.slice((filename.lastIndexOf('.') - 1 >>> 0) + 1).toLowerCase();\n}","map":{"version":3,"sources":["C:/Users/dimak/Desktop/courses/node_modules/redux-form-validators/lib/file.js"],"names":["Object","defineProperty","exports","value","isFileList","_validators","_interopRequireDefault","require","_helpers","obj","__esModule","ACCEPT_SEP_REG","file","memoize","_ref","arguments","length","undefined","message","msg","accept","minSize","maxSize","minFiles","maxFiles","ifCond","unless","allowBlank","selectNum","trim","toLowerCase","split","map","type","charAt","indexOf","stringToReg","min","sizeToInt","max","prepare","isAFileList","defaultOptions","formatMessage","prepareMsg","isNaN","count","acceptError","tooSmallError","tooBigError","_loop","i","len","_val","_ftype","_fext","fileExt","name","some","val","ftype","fext","test","push","size","files","pair","parse","formatSize","_pair","_default","FileList","File","str","TO_STRING","call","SIZE_REG","SIZE_UNITS","B","KB","MB","GB","TB","PB","EB","exec","console","error","concat","filename","slice","lastIndexOf"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isFileList = isFileList;\nexports[\"default\"] = void 0;\n\nvar _validators = _interopRequireDefault(require(\"./validators\"));\n\nvar _helpers = require(\"./helpers\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar ACCEPT_SEP_REG = ',';\nvar file = (0, _helpers.memoize)(function () {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      message = _ref.message,\n      msg = _ref.msg,\n      accept = _ref.accept,\n      minSize = _ref.minSize,\n      maxSize = _ref.maxSize,\n      minFiles = _ref.minFiles,\n      maxFiles = _ref.maxFiles,\n      ifCond = _ref[\"if\"],\n      unless = _ref.unless,\n      allowBlank = _ref.allowBlank;\n\n  msg = msg || message;\n  minFiles = (0, _helpers.selectNum)(minFiles);\n  maxFiles = (0, _helpers.selectNum)(maxFiles);\n\n  if (maxFiles < 0) {\n    maxFiles = null;\n  }\n\n  if (minFiles === null) {\n    minFiles = 1;\n  }\n\n  if (typeof accept === 'string' && accept.trim()) {\n    accept = accept.trim().toLowerCase().split(ACCEPT_SEP_REG).map(function (type) {\n      type = type.trim();\n      return type.charAt(0) === '.' || type.indexOf('*') < 0 ? type : (0, _helpers.stringToReg)(type);\n    });\n  } else {\n    accept = null;\n  }\n\n  var min = minSize != null ? sizeToInt(minSize) : null;\n  var max = maxSize != null ? sizeToInt(maxSize) : null;\n  return (0, _helpers.prepare)(ifCond, unless, false, function (value) {\n    var isAFileList = isFileList(value); // special blank check\n\n    if ((allowBlank != null ? allowBlank : _validators[\"default\"].defaultOptions.allowBlank) && (typeof value === 'string' ? value.trim() === '' : isAFileList && value.length === 0)) {\n      return;\n    }\n\n    if (!isAFileList) {\n      return _validators[\"default\"].formatMessage((0, _helpers.prepareMsg)(msg, 'file'));\n    }\n\n    if (isNaN(value.length)) {\n      value = [value];\n    }\n\n    if (value.length < minFiles) {\n      return _validators[\"default\"].formatMessage((0, _helpers.prepareMsg)(msg, 'fileTooFew', 'tooFew', 'minFiles', {\n        count: minFiles\n      }));\n    }\n\n    if (maxFiles !== null && value.length > maxFiles) {\n      return _validators[\"default\"].formatMessage((0, _helpers.prepareMsg)(msg, 'fileTooMany', 'tooMany', 'maxFiles', {\n        count: maxFiles\n      }));\n    }\n\n    var acceptError = [];\n    var tooSmallError = [];\n    var tooBigError = [];\n\n    var _loop = function _loop(i, len, _val, _ftype, _fext) {\n      _val = value[i];\n\n      if (accept) {\n        _ftype = _val.type ||\n        /* istanbul ignore next */\n        '';\n        _fext = fileExt(_val.name ||\n        /* istanbul ignore next */\n        '');\n\n        if (!accept.some(function (type) {\n          val = _val;\n          ftype = _ftype;\n          fext = _fext;\n          return typeof type === 'string' ? type === (type.charAt(0) === '.' ? _fext : _ftype) : type.test(_ftype);\n        })) {\n          acceptError.push(_val);\n        }\n      }\n\n      if (min != null && _val.size < min) {\n        tooSmallError.push(_val);\n      }\n\n      if (max != null && _val.size > max) {\n        tooBigError.push(_val);\n      }\n\n      val = _val;\n      ftype = _ftype;\n      fext = _fext;\n    };\n\n    for (var i = 0, len = value.length, val, ftype, fext; i < len; ++i) {\n      _loop(i, len, val, ftype, fext);\n    }\n\n    if (acceptError.length) {\n      return _validators[\"default\"].formatMessage((0, _helpers.prepareMsg)(msg, 'fileAccept', 'accept', {\n        files: acceptError,\n        count: acceptError.length\n      }));\n    }\n\n    if (tooSmallError.length) {\n      var pair = parse(minSize);\n      return _validators[\"default\"].formatMessage((0, _helpers.prepareMsg)(msg, 'fileTooSmall', 'tooSmall', 'minSize', {\n        files: tooSmallError,\n        count: tooSmallError.length,\n        size: _validators[\"default\"].formatSize(pair[1], pair[2] || 'B')\n      }));\n    }\n\n    if (tooBigError.length) {\n      var _pair = parse(maxSize);\n\n      return _validators[\"default\"].formatMessage((0, _helpers.prepareMsg)(msg, 'fileTooBig', 'tooBig', 'maxSize', {\n        files: tooBigError,\n        count: tooBigError.length,\n        size: _validators[\"default\"].formatSize(_pair[1], _pair[2] || 'B')\n      }));\n    }\n  });\n});\nvar _default = file;\nexports[\"default\"] = _default;\n\nfunction isFileList(value) {\n  if (typeof FileList !== 'undefined' && value instanceof FileList || typeof File !== 'undefined' && (value instanceof File || value[0] instanceof File)) {\n    return true;\n  }\n\n  var str = _helpers.TO_STRING.call(value);\n\n  return str === '[object FileList]' || str === '[object File]' || _helpers.TO_STRING.call(value[0]) === '[object File]';\n} // private\n// eslint-disable-next-line no-useless-escape\n\n\nvar SIZE_REG = /^([\\d\\.]+)\\s*([KMGTPE]?B)?$/;\nvar SIZE_UNITS = {\n  B: 1,\n  KB: 1024,\n  MB: 1048576,\n  GB: 1073741824,\n  TB: 1099511627776,\n  PB: 1125899906842624,\n  EB: 1152921504606847000\n};\n\nfunction parse(size) {\n  return SIZE_REG.exec(('' + size).trim());\n}\n\nfunction sizeToInt(size) {\n  var pair = parse(size);\n  if (pair) return pair[1] * (SIZE_UNITS[pair[2]] || 1);\n  /* istanbul ignore else */\n\n  if (typeof console !== 'undefined') {\n    console.error(\"file validator: size \\\"\".concat(size, \"\\\" unknown\"));\n  }\n\n  return null;\n}\n\nfunction fileExt(filename) {\n  return filename.slice((filename.lastIndexOf('.') - 1 >>> 0) + 1).toLowerCase();\n}"]},"metadata":{},"sourceType":"script"}