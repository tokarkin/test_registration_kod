{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _validators = _interopRequireDefault(require(\"./validators\"));\n\nvar _helpers = require(\"./helpers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n} // user:pass BasicAuth (optional)\n\n\nvar BASIC_AUTH = '(?:\\\\S+(?::\\\\S*)?@)?'; // IP address dotted notation octets\n\nvar IPV4 = '(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]?|0)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]?|0)'; // the IPv6 matching part is from here: https://gist.github.com/syzdek/6086792\n// IPv6 address in URLs are wrapped with []s\n\nvar IPV6 = \"\\\\[(?:\" + [// 1:2:3:4:5:6:7:8\n'(?:[\\\\da-f]{1,4}:){7,7}[\\\\da-f]{1,4}', // 2001:db8:3:4::192.0.2.33  64:ff9b::192.0.2.33  (IPv4-Embedded IPv6 Address)\n'(?:[\\\\da-f]{1,4}:){1,4}:' + IPV4, // ::255.255.255.255  ::ffff:255.255.255.255  ::ffff:0:255.255.255.255  (IPv4-mapped IPv6 addresses)\n'::(?:ffff(?::0{1,4}){0,1}:){0,1}' + IPV4, // 1::3:4:5:6:7:8  1::3:4:5:6:7:8 1::8\n'[\\\\da-f]{1,4}:(?:(?::[\\\\da-f]{1,4}){1,6})', // 1::4:5:6:7:8  1:2::4:5:6:7:8  1:2::8\n'(?:[\\\\da-f]{1,4}:){1,2}(?::[\\\\da-f]{1,4}){1,5}', // 1::5:6:7:8  1:2:3::5:6:7:8  1:2:3::8\n'(?:[\\\\da-f]{1,4}:){1,3}(?::[\\\\da-f]{1,4}){1,4}', // 1::6:7:8  1:2:3:4::6:7:8  1:2:3:4::8\n'(?:[\\\\da-f]{1,4}:){1,4}(?::[\\\\da-f]{1,4}){1,3}', // 1::7:8  1:2:3:4:5::7:8  1:2:3:4:5::8\n'(?:[\\\\da-f]{1,4}:){1,5}(?::[\\\\da-f]{1,4}){1,2}', // 1::8  1:2:3:4:5:6::8  1:2:3:4:5:6::8\n'(?:[\\\\da-f]{1,4}:){1,6}:[\\\\da-f]{1,4}', // 1::\n'(?:[\\\\da-f]{1,4}:){1,7}:', // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8  ::\n':(?:(?::[\\\\da-f]{1,4}){1,7}|:)'].join('|') + ')\\\\]'; // host & domain names, may end with dot\n\nvar HOST = // can be replaced by\n// '(?:(?:[a-z0-9\\\\u00a1-\\\\uffff][a-z0-9\\\\u00a1-\\\\uffff_-]{0,62})?[a-z0-9\\\\u00a1-\\\\uffff]\\\\.)+' +\n\"(?![-_])(?:[-\\\\w\\\\u00a1-\\\\uffff]{0,63}[^-_]\\\\.)+\" + // TLD identifier name, may end with dot\n\"(?:[a-z\\\\u00a1-\\\\uffff]{2,}\\\\.?)\"; // port number (optional)\n\nvar PORT = '(?::\\\\d{2,5})?'; // resource path (optional)\n\nvar PATH = '(?:[/][^\\\\s?#]*)?';\nvar SEARCH = '(?:[?][^\\\\s#]*)?';\nvar HASH = '(?:[#]\\\\S*)?';\nvar DEFAULT_OPTIONS = {\n  emptyProtocol: true,\n  protocolIdentifier: true,\n  basicAuth: true,\n  local: true,\n  ipv4: true,\n  ipv6: true,\n  host: true,\n  port: true,\n  path: true,\n  search: true,\n  hash: true\n};\nvar STRIP_PROTOCOL_REG = /:?\\/\\/$/;\nvar CLEAN_UP_PROPS = ['protocol', 'ipv4', 'host', 'path', 'search', 'hash'];\n\nfunction parseURL(url, options) {\n  options = defaultOptions(options);\n  var parts = url.match(buildReg(options, true));\n  if (!parts) return null;\n  var group = 1;\n  var h = {\n    protocol: parts[group++].replace(STRIP_PROTOCOL_REG, '')\n  };\n\n  if (options.basicAuth) {\n    var auth = parts[group++];\n\n    if (auth) {\n      var password = auth.slice(0, -1).split(':');\n      var username = password.shift();\n      h.basicAuth = {\n        username: username,\n        password: password.length ? password.join(':') : void 0\n      };\n    }\n  }\n\n  if (options.ipv4) h.ipv4 = parts[group++];\n\n  if (options.ipv6) {\n    var ipv6 = parts[group++];\n    if (ipv6) h.ipv6 = ipv6.slice(1, -1);\n  }\n\n  if (options.host) h.host = parts[group++];\n  if (options.local) h.host = parts[group++] || h.host;\n\n  if (options.port) {\n    var port = parts[group++];\n    if (port) h.port = +port.slice(1);\n  }\n\n  if (options.path) h.path = parts[group++];\n  if (options.search) h.search = parts[group++];\n  if (options.hash) h.hash = parts[group++]; // Clean up\n\n  CLEAN_UP_PROPS.forEach(function (k) {\n    if (!h[k]) delete h[k];\n  });\n  return h;\n} // Uses \"format\" internally which is already memoized\n\n\nvar url = (0, _helpers.regFormat)(function (options) {\n  return buildReg(defaultOptions(options), false);\n}, 'url');\nurl.parseURL = parseURL;\nvar _default = url;\nexports[\"default\"] = _default;\n\nfunction defaultOptions(options) {\n  options = (0, _helpers.assign)({}, DEFAULT_OPTIONS, options);\n  options.protocols = [].concat(options.protocol || options.protocols || _validators[\"default\"].defaultOptions.urlProtocols).join('|');\n  return options;\n}\n\nfunction group(option, regPart, capture) {\n  return option ? capture ? \"(\".concat(regPart, \")\") : regPart : '';\n}\n\nfunction buildReg(options, capture) {\n  return new RegExp('^' + group(true, \"(?:(?:(?:\".concat(options.protocols, \"):)\").concat(options.emptyProtocol ? '?' : '', \"\\\\/\\\\/)\").concat(options.protocolIdentifier ? '' : '?'), capture) + group(options.basicAuth, BASIC_AUTH, capture) + \"(?:\".concat([group(options.ipv4, IPV4, capture), group(options.ipv6, IPV6, capture), group(options.host, HOST, capture), group(options.local, 'localhost', capture)].filter(function (g) {\n    return g;\n  }).join('|'), \")\") + group(options.port, PORT, capture) + group(options.path, PATH, capture) + group(options.search, SEARCH, capture) + group(options.hash, HASH, capture) + '$', 'i');\n}","map":{"version":3,"sources":["C:/Users/dimak/Desktop/courses/node_modules/redux-form-validators/lib/url.js"],"names":["Object","defineProperty","exports","value","_validators","_interopRequireDefault","require","_helpers","obj","__esModule","BASIC_AUTH","IPV4","IPV6","join","HOST","PORT","PATH","SEARCH","HASH","DEFAULT_OPTIONS","emptyProtocol","protocolIdentifier","basicAuth","local","ipv4","ipv6","host","port","path","search","hash","STRIP_PROTOCOL_REG","CLEAN_UP_PROPS","parseURL","url","options","defaultOptions","parts","match","buildReg","group","h","protocol","replace","auth","password","slice","split","username","shift","length","forEach","k","regFormat","_default","assign","protocols","concat","urlProtocols","option","regPart","capture","RegExp","filter","g"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _validators = _interopRequireDefault(require(\"./validators\"));\n\nvar _helpers = require(\"./helpers\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// user:pass BasicAuth (optional)\nvar BASIC_AUTH = '(?:\\\\S+(?::\\\\S*)?@)?'; // IP address dotted notation octets\n\nvar IPV4 = '(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]?|0)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]?|0)'; // the IPv6 matching part is from here: https://gist.github.com/syzdek/6086792\n// IPv6 address in URLs are wrapped with []s\n\nvar IPV6 = \"\\\\[(?:\" + [// 1:2:3:4:5:6:7:8\n'(?:[\\\\da-f]{1,4}:){7,7}[\\\\da-f]{1,4}', // 2001:db8:3:4::192.0.2.33  64:ff9b::192.0.2.33  (IPv4-Embedded IPv6 Address)\n'(?:[\\\\da-f]{1,4}:){1,4}:' + IPV4, // ::255.255.255.255  ::ffff:255.255.255.255  ::ffff:0:255.255.255.255  (IPv4-mapped IPv6 addresses)\n'::(?:ffff(?::0{1,4}){0,1}:){0,1}' + IPV4, // 1::3:4:5:6:7:8  1::3:4:5:6:7:8 1::8\n'[\\\\da-f]{1,4}:(?:(?::[\\\\da-f]{1,4}){1,6})', // 1::4:5:6:7:8  1:2::4:5:6:7:8  1:2::8\n'(?:[\\\\da-f]{1,4}:){1,2}(?::[\\\\da-f]{1,4}){1,5}', // 1::5:6:7:8  1:2:3::5:6:7:8  1:2:3::8\n'(?:[\\\\da-f]{1,4}:){1,3}(?::[\\\\da-f]{1,4}){1,4}', // 1::6:7:8  1:2:3:4::6:7:8  1:2:3:4::8\n'(?:[\\\\da-f]{1,4}:){1,4}(?::[\\\\da-f]{1,4}){1,3}', // 1::7:8  1:2:3:4:5::7:8  1:2:3:4:5::8\n'(?:[\\\\da-f]{1,4}:){1,5}(?::[\\\\da-f]{1,4}){1,2}', // 1::8  1:2:3:4:5:6::8  1:2:3:4:5:6::8\n'(?:[\\\\da-f]{1,4}:){1,6}:[\\\\da-f]{1,4}', // 1::\n'(?:[\\\\da-f]{1,4}:){1,7}:', // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8  ::\n':(?:(?::[\\\\da-f]{1,4}){1,7}|:)'].join('|') + ')\\\\]'; // host & domain names, may end with dot\n\nvar HOST = // can be replaced by\n// '(?:(?:[a-z0-9\\\\u00a1-\\\\uffff][a-z0-9\\\\u00a1-\\\\uffff_-]{0,62})?[a-z0-9\\\\u00a1-\\\\uffff]\\\\.)+' +\n\"(?![-_])(?:[-\\\\w\\\\u00a1-\\\\uffff]{0,63}[^-_]\\\\.)+\" + // TLD identifier name, may end with dot\n\"(?:[a-z\\\\u00a1-\\\\uffff]{2,}\\\\.?)\"; // port number (optional)\n\nvar PORT = '(?::\\\\d{2,5})?'; // resource path (optional)\n\nvar PATH = '(?:[/][^\\\\s?#]*)?';\nvar SEARCH = '(?:[?][^\\\\s#]*)?';\nvar HASH = '(?:[#]\\\\S*)?';\nvar DEFAULT_OPTIONS = {\n  emptyProtocol: true,\n  protocolIdentifier: true,\n  basicAuth: true,\n  local: true,\n  ipv4: true,\n  ipv6: true,\n  host: true,\n  port: true,\n  path: true,\n  search: true,\n  hash: true\n};\nvar STRIP_PROTOCOL_REG = /:?\\/\\/$/;\nvar CLEAN_UP_PROPS = ['protocol', 'ipv4', 'host', 'path', 'search', 'hash'];\n\nfunction parseURL(url, options) {\n  options = defaultOptions(options);\n  var parts = url.match(buildReg(options, true));\n  if (!parts) return null;\n  var group = 1;\n  var h = {\n    protocol: parts[group++].replace(STRIP_PROTOCOL_REG, '')\n  };\n\n  if (options.basicAuth) {\n    var auth = parts[group++];\n\n    if (auth) {\n      var password = auth.slice(0, -1).split(':');\n      var username = password.shift();\n      h.basicAuth = {\n        username: username,\n        password: password.length ? password.join(':') : void 0\n      };\n    }\n  }\n\n  if (options.ipv4) h.ipv4 = parts[group++];\n\n  if (options.ipv6) {\n    var ipv6 = parts[group++];\n    if (ipv6) h.ipv6 = ipv6.slice(1, -1);\n  }\n\n  if (options.host) h.host = parts[group++];\n  if (options.local) h.host = parts[group++] || h.host;\n\n  if (options.port) {\n    var port = parts[group++];\n    if (port) h.port = +port.slice(1);\n  }\n\n  if (options.path) h.path = parts[group++];\n  if (options.search) h.search = parts[group++];\n  if (options.hash) h.hash = parts[group++]; // Clean up\n\n  CLEAN_UP_PROPS.forEach(function (k) {\n    if (!h[k]) delete h[k];\n  });\n  return h;\n} // Uses \"format\" internally which is already memoized\n\n\nvar url = (0, _helpers.regFormat)(function (options) {\n  return buildReg(defaultOptions(options), false);\n}, 'url');\nurl.parseURL = parseURL;\nvar _default = url;\nexports[\"default\"] = _default;\n\nfunction defaultOptions(options) {\n  options = (0, _helpers.assign)({}, DEFAULT_OPTIONS, options);\n  options.protocols = [].concat(options.protocol || options.protocols || _validators[\"default\"].defaultOptions.urlProtocols).join('|');\n  return options;\n}\n\nfunction group(option, regPart, capture) {\n  return option ? capture ? \"(\".concat(regPart, \")\") : regPart : '';\n}\n\nfunction buildReg(options, capture) {\n  return new RegExp('^' + group(true, \"(?:(?:(?:\".concat(options.protocols, \"):)\").concat(options.emptyProtocol ? '?' : '', \"\\\\/\\\\/)\").concat(options.protocolIdentifier ? '' : '?'), capture) + group(options.basicAuth, BASIC_AUTH, capture) + \"(?:\".concat([group(options.ipv4, IPV4, capture), group(options.ipv6, IPV6, capture), group(options.host, HOST, capture), group(options.local, 'localhost', capture)].filter(function (g) {\n    return g;\n  }).join('|'), \")\") + group(options.port, PORT, capture) + group(options.path, PATH, capture) + group(options.search, SEARCH, capture) + group(options.hash, HASH, capture) + '$', 'i');\n}"]},"metadata":{},"sourceType":"script"}