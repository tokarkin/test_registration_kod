{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\dimak\\\\Desktop\\\\courses\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"C:\\\\Users\\\\dimak\\\\Desktop\\\\courses\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\dimak\\\\Desktop\\\\courses\\\\src\\\\components\\\\RegistrationForm\\\\Form.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport TextField from '@material-ui/core/TextField';\nimport { createTextMask } from \"redux-form-input-masks\";\nimport { file } from 'redux-form-validators';\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nconst Form = props => {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  let onClick = e => {\n    props.Click(e);\n  };\n\n  const Submit = () => {\n    handleClickOpen();\n  };\n\n  return React.createElement(\"form\", {\n    style: {\n      textAlign: 'center'\n    },\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"name\",\n    component: renderTextField,\n    variant: \"outlined\",\n    label: \"Your name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      margin: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"email\",\n    label: \"Your email\",\n    variant: \"outlined\",\n    component: renderTextField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Field, Object.assign({\n    name: \"phone\",\n    variant: \"outlined\",\n    component: renderTextField,\n    label: \"Phone Number\"\n  }, phoneMask, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Select your position\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, props.position !== undefined ? props.position.map((position, key) => React.createElement(\"div\", {\n    key: key,\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Field, {\n    onClick: () => onClick(position.id),\n    name: \"position\",\n    component: \"input\",\n    type: \"radio\",\n    value: position.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), \" \", position.name)) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      marginTop: '15px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Choose Foto\"), React.createElement(Field, {\n    name: \"file\",\n    component: renderFileInput,\n    validate: file({\n      accept: '.png, .jpg, .jpeg',\n      maxSize: '5 MB',\n      message: 'The selected file is not valid'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      marginTop: '15px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    variant: \"outlined\",\n    onClick: Submit,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(Button, {\n    style: {\n      marginLeft: '10px'\n    },\n    type: \"button\",\n    variant: \"outlined\",\n    onClick: props.reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Clear Values\")), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Congratulations\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"You have successfully passed the registration\")), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Great\")))));\n};\n\nconst validate = values => {\n  let errors = {};\n  const requiredFields = ['name', 'email', 'phone'];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Please enter your name';\n    }\n  });\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (values.phone && !/^([1-9][0-9]{8})$/i.test(values.phone)) {\n    errors.phone = 'Invalid  phone';\n  } // if (values.file[0]){\n  //     errors.file[0]= 'file shut be jpg/Jpeg'\n  // }\n\n\n  console.log(errors);\n  return errors;\n};\n\nconst renderTextField = (_ref) => {\n  let label = _ref.label,\n      input = _ref.input,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      invalid = _ref$meta.invalid,\n      error = _ref$meta.error,\n      custom = _objectWithoutProperties(_ref, [\"label\", \"input\", \"meta\"]);\n\n  return React.createElement(TextField, Object.assign({\n    label: label,\n    placeholder: label,\n    error: touched && invalid,\n    helperText: touched && error\n  }, input, custom, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }));\n};\n\nconst renderFileInput = (_ref2) => {\n  let _ref2$input = _ref2.input,\n      file = _ref2$input.value,\n      props = _objectWithoutProperties(_ref2$input, [\"value\"]),\n      filesMeta = _ref2.meta,\n      disabled = _ref2.disabled;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({\n    type: \"file\"\n  }, props, {\n    disabled: disabled,\n    multiple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  })));\n};\n\nconst phoneMask = createTextMask({\n  pattern: '+380(99) 999-99-99'\n});\nexport default reduxForm({\n  form: 'registration',\n  // a unique identifier for this form\n  destroyOnUnmount: false,\n  validate\n})(Form);","map":{"version":3,"sources":["C:/Users/dimak/Desktop/courses/src/components/RegistrationForm/Form.jsx"],"names":["React","Field","reduxForm","TextField","createTextMask","file","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Form","props","useState","open","setOpen","handleClickOpen","handleClose","onClick","e","Click","Submit","textAlign","handleSubmit","renderTextField","margin","phoneMask","position","undefined","map","key","display","justifyContent","id","name","marginTop","renderFileInput","accept","maxSize","message","marginLeft","reset","validate","values","errors","requiredFields","forEach","field","email","test","phone","console","log","label","input","meta","touched","invalid","error","custom","value","filesMeta","disabled","pattern","form","destroyOnUnmount"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport TextField from '@material-ui/core/TextField'\nimport { createTextMask} from \"redux-form-input-masks\";\nimport { file } from 'redux-form-validators'\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\n\n\nconst Form = (props) => {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n    let onClick= (e)=>{\n        props.Click(e);\n    };\n    const Submit=()=>{\n        handleClickOpen();\n    };\n    return (\n\n\n\n        <form style={{textAlign:'center'}} onSubmit={props.handleSubmit}>\n            <div  >\n            <div >\n\n                <Field\n                    name=\"name\"\n                    component={renderTextField}\n                    variant=\"outlined\"\n                    label='Your name'\n                />\n            </div>\n            <div  style={{margin:'20px'}}>\n                <Field name=\"email\" label=\"Your email\" variant=\"outlined\" component={renderTextField} />\n            </div>\n\n            <div>\n                <Field name=\"phone\"  variant=\"outlined\" component={renderTextField} label=\"Phone Number\" {...phoneMask}  />\n            </div>\n                <h4>\n                    Select your position\n                </h4>\n            <div>\n                {props.position !== undefined ? props.position.map((position,key) =>\n                    <div key={key} style={{display:'flex',justifyContent:'center'}}>\n                            <Field onClick={()=>onClick(position.id)} name=\"position\" component=\"input\"\n                                   type=\"radio\" value={position.name}\n\n                            /> {position.name}\n                    </div>\n                ): <div></div>}\n            </div>\n\n        <div style={{marginTop:'15px'}}>\n            <h4>\n                Choose Foto\n            </h4>\n            <Field name=\"file\"  component={renderFileInput}\n                   validate={file({ accept: '.png, .jpg, .jpeg',maxSize: '5 MB', message: 'The selected file is not valid' },)}    />\n        </div>\n            <div style={{marginTop:'15px'}}>\n                <Button type=\"submit\"  variant=\"outlined\" onClick={Submit}  color=\"primary\" >\n                    Submit\n                </Button>\n                <Button style={{marginLeft:'10px'}} type=\"button\" variant=\"outlined\" onClick={props.reset}>\n                    Clear Values\n                </Button>\n            </div>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"Congratulations\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        You have successfully passed the registration\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Great\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            </div>\n        </form>\n\n    )\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst validate = values => {\n    let errors = {};\n\n    const requiredFields = [\n        'name',\n        'email',\n        'phone',\n\n    ];\n    requiredFields.forEach(field => {\n        if (!values[field]) {\n            errors[field] = 'Please enter your name'\n        }\n    });\n    if (\n        values.email &&\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n    ) {\n        errors.email = 'Invalid email address'\n    }\n    if (\n        values.phone &&\n        !/^([1-9][0-9]{8})$/i.test(values.phone)\n    ) {\n        errors.phone = 'Invalid  phone'\n    }\n    // if (values.file[0]){\n    //     errors.file[0]= 'file shut be jpg/Jpeg'\n    // }\n    console.log(errors);\n    return errors;\n}\n\nconst renderTextField = ({\n                             label,\n                             input,\n                             meta: { touched, invalid, error },\n                             ...custom\n                         }) => (\n    <TextField\n        label={label}\n        placeholder={label}\n        error={touched && invalid}\n        helperText={touched && error}\n        {...input}\n        {...custom}\n    />\n);\n\nconst renderFileInput = ({\n                                    input: {value: file, ...props },\n                                    meta: filesMeta,\n                                    disabled,\n\n                                }) => {\n    return (\n        <div>\n            <input\n                type=\"file\"\n\n                {...props}\n                disabled={disabled}\n                multiple\n\n            />\n        </div>\n    )\n};\n\n\n\nconst phoneMask = createTextMask({\n    pattern: '+380(99) 999-99-99',\n});\n\n\nexport default reduxForm({\n    form: 'registration', // a unique identifier for this form\n    destroyOnUnmount: false,\n    validate,\n})(Form)"]},"metadata":{},"sourceType":"module"}