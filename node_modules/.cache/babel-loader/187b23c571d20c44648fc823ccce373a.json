{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _reduxFormValidators = require(\"./redux-form-validators\");\n\nvar messages = (0, _reduxFormValidators.defineMessages)({\n  absence: {\n    id: 'form.errors.absence',\n    defaultMessage: 'must be blank'\n  },\n  acceptance: {\n    id: 'form.errors.acceptance',\n    defaultMessage: 'must be accepted'\n  },\n  confirmation: {\n    id: 'form.errors.confirmation',\n    defaultMessage: \"doesn't match `{fieldLabel}`\"\n  },\n  dateFormat: {\n    id: 'form.errors.dateFormat',\n    defaultMessage: 'expected format: {format}'\n  },\n  dateInvalid: {\n    id: 'form.errors.dateInvalid',\n    defaultMessage: 'is not a valid date'\n  },\n  dateRange: {\n    id: 'form.errors.dateRange',\n    defaultMessage: 'shoud be {op} {date}'\n  },\n  email: {\n    id: 'form.errors.email',\n    defaultMessage: 'is not a valid email'\n  },\n  emailDomain: {\n    id: 'form.errors.emailDomain',\n    defaultMessage: '{domain} is not an accepted domain'\n  },\n  equalTo: {\n    id: 'form.errors.equalTo',\n    defaultMessage: 'must be equal to {count, number}'\n  },\n  even: {\n    id: 'form.errors.even',\n    defaultMessage: 'must be even'\n  },\n  exclusion: {\n    id: 'form.errors.exclusion',\n    defaultMessage: 'is reserved'\n  },\n  file: {\n    id: 'form.errors.file',\n    defaultMessage: 'is not a file'\n  },\n  fileAccept: {\n    id: 'form.errors.fileAccept',\n    defaultMessage: 'invalid file {count, plural, one {type} other {types ({count})}}'\n  },\n  fileTooBig: {\n    id: 'form.errors.fileTooBig',\n    defaultMessage: '{count, plural, one {is} other {{count} files are}} too big (maximum is {count, plural, one {{size}} other {{size} each}})'\n  },\n  fileTooFew: {\n    id: 'form.errors.fileTooFew',\n    defaultMessage: 'invalid number of files (minimum is {count})'\n  },\n  fileTooMany: {\n    id: 'form.errors.fileTooMany',\n    defaultMessage: 'invalid number of files (maximum is {count})'\n  },\n  fileTooSmall: {\n    id: 'form.errors.fileTooSmall',\n    defaultMessage: '{count, plural, one {is} other {{count} files are}} too small (minimum is {count, plural, one {{size}} other {{size} each}})'\n  },\n  greaterThan: {\n    id: 'form.errors.greaterThan',\n    defaultMessage: 'must be greater than {count, number}'\n  },\n  greaterThanOrEqualTo: {\n    id: 'form.errors.greaterThanOrEqualTo',\n    defaultMessage: 'must be greater than or equal to {count, number}'\n  },\n  inclusion: {\n    id: 'form.errors.inclusion',\n    defaultMessage: 'is not included in the list'\n  },\n  invalid: {\n    id: 'form.errors.invalid',\n    defaultMessage: 'is invalid'\n  },\n  lessThan: {\n    id: 'form.errors.lessThan',\n    defaultMessage: 'must be less than {count, number}'\n  },\n  lessThanOrEqualTo: {\n    id: 'form.errors.lessThanOrEqualTo',\n    defaultMessage: 'must be less than or equal to {count, number}'\n  },\n  notAnInteger: {\n    id: 'form.errors.notAnInteger',\n    defaultMessage: 'is not an integer'\n  },\n  notANumber: {\n    id: 'form.errors.notANumber',\n    defaultMessage: 'is not a number'\n  },\n  odd: {\n    id: 'form.errors.odd',\n    defaultMessage: 'must be odd'\n  },\n  otherThan: {\n    id: 'form.errors.otherThan',\n    defaultMessage: 'must be other than {count, number}'\n  },\n  presence: {\n    id: 'form.errors.presence',\n    defaultMessage: 'is required'\n  },\n  tooLong: {\n    id: 'form.errors.tooLong',\n    defaultMessage: 'is too long (maximum is {count, number} {count, plural, one {character} other {characters}})'\n  },\n  tooShort: {\n    id: 'form.errors.tooShort',\n    defaultMessage: 'is too short (minimum is {count, number} {count, plural, one {character} other {characters}})'\n  },\n  url: {\n    id: 'form.errors.url',\n    defaultMessage: 'is not a valid URL'\n  },\n  wrongLength: {\n    id: 'form.errors.wrongLength',\n    defaultMessage: 'is the wrong length (should be {count, number} {count, plural, one {character} other {characters}})'\n  }\n});\nvar _default = messages;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/Users/dimak/Desktop/courses/node_modules/redux-form-validators/lib/messages.js"],"names":["Object","defineProperty","exports","value","_reduxFormValidators","require","messages","defineMessages","absence","id","defaultMessage","acceptance","confirmation","dateFormat","dateInvalid","dateRange","email","emailDomain","equalTo","even","exclusion","file","fileAccept","fileTooBig","fileTooFew","fileTooMany","fileTooSmall","greaterThan","greaterThanOrEqualTo","inclusion","invalid","lessThan","lessThanOrEqualTo","notAnInteger","notANumber","odd","otherThan","presence","tooLong","tooShort","url","wrongLength","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _reduxFormValidators = require(\"./redux-form-validators\");\n\nvar messages = (0, _reduxFormValidators.defineMessages)({\n  absence: {\n    id: 'form.errors.absence',\n    defaultMessage: 'must be blank'\n  },\n  acceptance: {\n    id: 'form.errors.acceptance',\n    defaultMessage: 'must be accepted'\n  },\n  confirmation: {\n    id: 'form.errors.confirmation',\n    defaultMessage: \"doesn't match `{fieldLabel}`\"\n  },\n  dateFormat: {\n    id: 'form.errors.dateFormat',\n    defaultMessage: 'expected format: {format}'\n  },\n  dateInvalid: {\n    id: 'form.errors.dateInvalid',\n    defaultMessage: 'is not a valid date'\n  },\n  dateRange: {\n    id: 'form.errors.dateRange',\n    defaultMessage: 'shoud be {op} {date}'\n  },\n  email: {\n    id: 'form.errors.email',\n    defaultMessage: 'is not a valid email'\n  },\n  emailDomain: {\n    id: 'form.errors.emailDomain',\n    defaultMessage: '{domain} is not an accepted domain'\n  },\n  equalTo: {\n    id: 'form.errors.equalTo',\n    defaultMessage: 'must be equal to {count, number}'\n  },\n  even: {\n    id: 'form.errors.even',\n    defaultMessage: 'must be even'\n  },\n  exclusion: {\n    id: 'form.errors.exclusion',\n    defaultMessage: 'is reserved'\n  },\n  file: {\n    id: 'form.errors.file',\n    defaultMessage: 'is not a file'\n  },\n  fileAccept: {\n    id: 'form.errors.fileAccept',\n    defaultMessage: 'invalid file {count, plural, one {type} other {types ({count})}}'\n  },\n  fileTooBig: {\n    id: 'form.errors.fileTooBig',\n    defaultMessage: '{count, plural, one {is} other {{count} files are}} too big (maximum is {count, plural, one {{size}} other {{size} each}})'\n  },\n  fileTooFew: {\n    id: 'form.errors.fileTooFew',\n    defaultMessage: 'invalid number of files (minimum is {count})'\n  },\n  fileTooMany: {\n    id: 'form.errors.fileTooMany',\n    defaultMessage: 'invalid number of files (maximum is {count})'\n  },\n  fileTooSmall: {\n    id: 'form.errors.fileTooSmall',\n    defaultMessage: '{count, plural, one {is} other {{count} files are}} too small (minimum is {count, plural, one {{size}} other {{size} each}})'\n  },\n  greaterThan: {\n    id: 'form.errors.greaterThan',\n    defaultMessage: 'must be greater than {count, number}'\n  },\n  greaterThanOrEqualTo: {\n    id: 'form.errors.greaterThanOrEqualTo',\n    defaultMessage: 'must be greater than or equal to {count, number}'\n  },\n  inclusion: {\n    id: 'form.errors.inclusion',\n    defaultMessage: 'is not included in the list'\n  },\n  invalid: {\n    id: 'form.errors.invalid',\n    defaultMessage: 'is invalid'\n  },\n  lessThan: {\n    id: 'form.errors.lessThan',\n    defaultMessage: 'must be less than {count, number}'\n  },\n  lessThanOrEqualTo: {\n    id: 'form.errors.lessThanOrEqualTo',\n    defaultMessage: 'must be less than or equal to {count, number}'\n  },\n  notAnInteger: {\n    id: 'form.errors.notAnInteger',\n    defaultMessage: 'is not an integer'\n  },\n  notANumber: {\n    id: 'form.errors.notANumber',\n    defaultMessage: 'is not a number'\n  },\n  odd: {\n    id: 'form.errors.odd',\n    defaultMessage: 'must be odd'\n  },\n  otherThan: {\n    id: 'form.errors.otherThan',\n    defaultMessage: 'must be other than {count, number}'\n  },\n  presence: {\n    id: 'form.errors.presence',\n    defaultMessage: 'is required'\n  },\n  tooLong: {\n    id: 'form.errors.tooLong',\n    defaultMessage: 'is too long (maximum is {count, number} {count, plural, one {character} other {characters}})'\n  },\n  tooShort: {\n    id: 'form.errors.tooShort',\n    defaultMessage: 'is too short (minimum is {count, number} {count, plural, one {character} other {characters}})'\n  },\n  url: {\n    id: 'form.errors.url',\n    defaultMessage: 'is not a valid URL'\n  },\n  wrongLength: {\n    id: 'form.errors.wrongLength',\n    defaultMessage: 'is the wrong length (should be {count, number} {count, plural, one {character} other {characters}})'\n  }\n});\nvar _default = messages;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}